/*
 * This file is generated by jOOQ.
*/
package org.com.app.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.com.app.tables.Project;
import org.com.app.tables.records.ProjectRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectDao extends DAOImpl<ProjectRecord, org.com.app.tables.pojos.Project, Integer> {

    /**
     * Create a new ProjectDao without any configuration
     */
    public ProjectDao() {
        super(Project.PROJECT, org.com.app.tables.pojos.Project.class);
    }

    /**
     * Create a new ProjectDao with an attached configuration
     */
    public ProjectDao(Configuration configuration) {
        super(Project.PROJECT, org.com.app.tables.pojos.Project.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(org.com.app.tables.pojos.Project object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.com.app.tables.pojos.Project> fetchById(Integer... values) {
        return fetch(Project.PROJECT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.com.app.tables.pojos.Project fetchOneById(Integer value) {
        return fetchOne(Project.PROJECT.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<org.com.app.tables.pojos.Project> fetchByName(String... values) {
        return fetch(Project.PROJECT.NAME, values);
    }

    /**
     * Fetch records that have <code>budget IN (values)</code>
     */
    public List<org.com.app.tables.pojos.Project> fetchByBudget(String... values) {
        return fetch(Project.PROJECT.BUDGET, values);
    }

    /**
     * Fetch records that have <code>descrption IN (values)</code>
     */
    public List<org.com.app.tables.pojos.Project> fetchByDescrption(String... values) {
        return fetch(Project.PROJECT.DESCRPTION, values);
    }

    /**
     * Fetch records that have <code>lieu IN (values)</code>
     */
    public List<org.com.app.tables.pojos.Project> fetchByLieu(String... values) {
        return fetch(Project.PROJECT.LIEU, values);
    }
}
