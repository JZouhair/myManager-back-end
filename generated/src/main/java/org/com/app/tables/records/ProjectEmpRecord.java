/*
 * This file is generated by jOOQ.
*/
package org.com.app.tables.records;


import javax.annotation.Generated;

import org.com.app.tables.ProjectEmp;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectEmpRecord extends UpdatableRecordImpl<ProjectEmpRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1201866745;

    /**
     * Setter for <code>empgestproject.project_emp.id_emp</code>.
     */
    public void setIdEmp(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>empgestproject.project_emp.id_emp</code>.
     */
    public Integer getIdEmp() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>empgestproject.project_emp.id_project</code>.
     */
    public void setIdProject(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>empgestproject.project_emp.id_project</code>.
     */
    public Integer getIdProject() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ProjectEmp.PROJECT_EMP.ID_EMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ProjectEmp.PROJECT_EMP.ID_PROJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getIdEmp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getIdProject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdEmp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getIdProject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectEmpRecord value1(Integer value) {
        setIdEmp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectEmpRecord value2(Integer value) {
        setIdProject(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectEmpRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectEmpRecord
     */
    public ProjectEmpRecord() {
        super(ProjectEmp.PROJECT_EMP);
    }

    /**
     * Create a detached, initialised ProjectEmpRecord
     */
    public ProjectEmpRecord(Integer idEmp, Integer idProject) {
        super(ProjectEmp.PROJECT_EMP);

        set(0, idEmp);
        set(1, idProject);
    }
}
