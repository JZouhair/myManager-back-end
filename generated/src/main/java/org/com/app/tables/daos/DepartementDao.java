/*
 * This file is generated by jOOQ.
*/
package org.com.app.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.com.app.tables.Departement;
import org.com.app.tables.records.DepartementRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DepartementDao extends DAOImpl<DepartementRecord, org.com.app.tables.pojos.Departement, Integer> {

    /**
     * Create a new DepartementDao without any configuration
     */
    public DepartementDao() {
        super(Departement.DEPARTEMENT, org.com.app.tables.pojos.Departement.class);
    }

    /**
     * Create a new DepartementDao with an attached configuration
     */
    public DepartementDao(Configuration configuration) {
        super(Departement.DEPARTEMENT, org.com.app.tables.pojos.Departement.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(org.com.app.tables.pojos.Departement object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.com.app.tables.pojos.Departement> fetchById(Integer... values) {
        return fetch(Departement.DEPARTEMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.com.app.tables.pojos.Departement fetchOneById(Integer value) {
        return fetchOne(Departement.DEPARTEMENT.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<org.com.app.tables.pojos.Departement> fetchByName(String... values) {
        return fetch(Departement.DEPARTEMENT.NAME, values);
    }
}
