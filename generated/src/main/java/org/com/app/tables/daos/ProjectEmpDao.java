/*
 * This file is generated by jOOQ.
*/
package org.com.app.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.com.app.tables.ProjectEmp;
import org.com.app.tables.records.ProjectEmpRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectEmpDao extends DAOImpl<ProjectEmpRecord, org.com.app.tables.pojos.ProjectEmp, Integer> {

    /**
     * Create a new ProjectEmpDao without any configuration
     */
    public ProjectEmpDao() {
        super(ProjectEmp.PROJECT_EMP, org.com.app.tables.pojos.ProjectEmp.class);
    }

    /**
     * Create a new ProjectEmpDao with an attached configuration
     */
    public ProjectEmpDao(Configuration configuration) {
        super(ProjectEmp.PROJECT_EMP, org.com.app.tables.pojos.ProjectEmp.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(org.com.app.tables.pojos.ProjectEmp object) {
        return object.getIdEmp();
    }

    /**
     * Fetch records that have <code>id_emp IN (values)</code>
     */
    public List<org.com.app.tables.pojos.ProjectEmp> fetchByIdEmp(Integer... values) {
        return fetch(ProjectEmp.PROJECT_EMP.ID_EMP, values);
    }

    /**
     * Fetch a unique record that has <code>id_emp = value</code>
     */
    public org.com.app.tables.pojos.ProjectEmp fetchOneByIdEmp(Integer value) {
        return fetchOne(ProjectEmp.PROJECT_EMP.ID_EMP, value);
    }

    /**
     * Fetch records that have <code>id_project IN (values)</code>
     */
    public List<org.com.app.tables.pojos.ProjectEmp> fetchByIdProject(Integer... values) {
        return fetch(ProjectEmp.PROJECT_EMP.ID_PROJECT, values);
    }
}
